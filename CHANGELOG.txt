2025.01.22
- Fixed bug when reading a MUL-tree with `--multree`

2023.03.24
- Hybrid tip labels now have '+' added to them in the dup-counts output

2023.03.11
- Re-factored code
- Removed `-d` and replaced with the `--st-only` and `--no-st` options, which seems clearer
- Clarified how `-v` works
- Converted underscores in output files to hyphens
- Changed format of output files
- Added `-scores.txt` that contains score information for all MUL-trees rather than just putting that in the `.log` file
- Converted global vars into a dict

# Version 1.2
- Added the -p option to specify the number of procsesses GRAMPA can use. Multi-processing has vastly sped up GRAMPA's run time.

# Version 1.1: March 22, 2017
-	Added reconciliation to the input singly-labeled tree. This allows for comparisions of scenarios of no polyploidy (singly-labeled tree) vs. polyploidy (MUL-trees).
-	The -d option has been added to control whether to do reconciliation to the singly-labeled tree. See below for usage.
-	Now runs the --checknums option for all reconciliation runs in order to filter trees that are over the group cap for any MUL-tree considered. This ensures that the same trees are run for every MUL-tree. The --checknums option now simply terminates the program after the groups have been calculated.
-	Added the --maps option to print the maps for each reconciliation.
-	The --multree option to simply build MUL-trees with given singly-labeled tree and h1 and h2 nodes has been renamed --buildmultree.
-	The -t option has been renamed with --multree.
-	The max group cap (-c) has been raised to 18.
-	-o now specifies an output DIRECTORY instead of a file. GRAMPA will make this directory for you.
-	By default, all output files will be placed in the directory specified with -o with "grampa_" as their prefix (i.e. grampa_out.txt, grampa_det.txt). -p has been added so users can change this prefix.
-	Major restructure of functions and libraries.
-	-s and -g can now be entered as either file names containing trees or as tree strings directly in the command line.


# Version 1.0: Spring 2016
-	First commit and implementation of the MUL-tree reconciliation algorithm.
# =========================================================================
#		  GRAMPA: MUL-tree reconciliation
#			04.02.2017 | 02:17:44
# LOG 02.17.44: Number of threads:                                         2
# LOG 02.17.45: The input species tree with internal nodes labeled:        ((((((x,y)<1>,z)<2>,B)<3>,A)<4>,C)<5>,D)<6>
# LOG 02.17.45: Input species tree is:                                     Singly-labeled
# LOG 02.17.45: No H1 node defined                                         Searching all possible H1 nodes.
# LOG 02.17.45: No H2 node defined                                         Searching all possible H2 nodes.
# LOG 02.17.45: Using gene trees in file:                                  .\gene_trees_33.txt
# LOG 02.17.45: Total gene trees:                                          1000
# LOG 02.17.45: Main results and logs will be written to file:             nop_example_output\nop_test_out.txt
# LOG 02.17.45: The number of groups for each tree will be calculated:     nop_example_output\nop_test_checknums.txt
# LOG 02.17.45: Filtered trees will be saved (if necessary):               nop_example_output\nop_test_trees_filtered.txt
# LOG 02.17.45: Filtering gene trees with # of polyploid groups over:      8
# LOG 02.17.45: Detailed results will be written to file:                  nop_example_output\nop_test_det.txt
# LOG 02.17.45: Detailed output will contain:                              Reconciliation scores only
# LOG 02.17.45: Reconciling to:                                            Singly-labeled and MUL-trees
# LOG 02.18.37: Filtered trees:                                            1
# LOG 02.18.37: Final tree count for reconciliations:                      999
# ---------
# Tree #	H1 node	H2 node	Tree string	Total score
ST			((((((x,y)<1>,z)<2>,B)<3>,A)<4>,C)<5>,D)<6>	4115
MT-1	A	A	((((((x,y)<1>,z)<2>,B)<3>,(A+,A*)<4>)<5>,C)<6>,D)<7>	4423
MT-2	A	C	((((((x,y)<1>,z)<2>,B)<3>,A+)<4>,(C,A*)<5>)<6>,D)<7>	4753
MT-3	A	B	((((((x,y)<1>,z)<2>,(B,A*)<3>)<4>,A+)<5>,C)<6>,D)<7>	4929
MT-4	A	D	((((((x,y)<1>,z)<2>,B)<3>,A+)<4>,C)<5>,(D,A*)<6>)<7>	4754
MT-5	A	<3>	(((((((x,y)<1>,z)<2>,B)<3>,A*)<4>,A+)<5>,C)<6>,D)<7>	4965
MT-6	A	z	((((((x,y)<1>,(z,A*)<2>)<3>,B)<4>,A+)<5>,C)<6>,D)<7>	5047
MT-7	A	<2>	(((((((x,y)<1>,z)<2>,A*)<3>,B)<4>,A+)<5>,C)<6>,D)<7>	5096
MT-8	A	<1>	(((((((x,y)<1>,A*)<2>,z)<3>,B)<4>,A+)<5>,C)<6>,D)<7>	5113
MT-9	A	y	((((((x,(y,A*)<1>)<2>,z)<3>,B)<4>,A+)<5>,C)<6>,D)<7>	5088
MT-10	A	x	(((((((x,A*)<1>,y)<2>,z)<3>,B)<4>,A+)<5>,C)<6>,D)<7>	5120
MT-11	A	<6>	(((((((x,y)<1>,z)<2>,B)<3>,A+)<4>,C)<5>,D)<6>,A*)<7>	5055
MT-12	A	<4>	(((((((x,y)<1>,z)<2>,B)<3>,A+)<4>,A*)<5>,C)<6>,D)<7>	4965
MT-13	A	<5>	(((((((x,y)<1>,z)<2>,B)<3>,A+)<4>,C)<5>,A*)<6>,D)<7>	4975
MT-14	C	A	((((((x,y)<1>,z)<2>,B)<3>,(A,C*)<4>)<5>,C+)<6>,D)<7>	4909
MT-15	C	C	((((((x,y)<1>,z)<2>,B)<3>,A)<4>,(C+,C*)<5>)<6>,D)<7>	4370
MT-16	C	B	((((((x,y)<1>,z)<2>,(B,C*)<3>)<4>,A)<5>,C+)<6>,D)<7>	4943
MT-17	C	D	((((((x,y)<1>,z)<2>,B)<3>,A)<4>,C+)<5>,(D,C*)<6>)<7>	4726
MT-18	C	<3>	(((((((x,y)<1>,z)<2>,B)<3>,C*)<4>,A)<5>,C+)<6>,D)<7>	5067
MT-19	C	z	((((((x,y)<1>,(z,C*)<2>)<3>,B)<4>,A)<5>,C+)<6>,D)<7>	5048
MT-20	C	<2>	(((((((x,y)<1>,z)<2>,C*)<3>,B)<4>,A)<5>,C+)<6>,D)<7>	5115
MT-21	C	<1>	(((((((x,y)<1>,C*)<2>,z)<3>,B)<4>,A)<5>,C+)<6>,D)<7>	5113
MT-22	C	y	((((((x,(y,C*)<1>)<2>,z)<3>,B)<4>,A)<5>,C+)<6>,D)<7>	5090
MT-23	C	x	(((((((x,C*)<1>,y)<2>,z)<3>,B)<4>,A)<5>,C+)<6>,D)<7>	5121
MT-24	C	<6>	(((((((x,y)<1>,z)<2>,B)<3>,A)<4>,C+)<5>,D)<6>,C*)<7>	5039
MT-25	C	<4>	(((((((x,y)<1>,z)<2>,B)<3>,A)<4>,C*)<5>,C+)<6>,D)<7>	4979
MT-26	C	<5>	(((((((x,y)<1>,z)<2>,B)<3>,A)<4>,C+)<5>,C*)<6>,D)<7>	4979
MT-27	B	A	((((((x,y)<1>,z)<2>,B+)<3>,(A,B*)<4>)<5>,C)<6>,D)<7>	4840
MT-28	B	C	((((((x,y)<1>,z)<2>,B+)<3>,A)<4>,(C,B*)<5>)<6>,D)<7>	4813
MT-29	B	B	((((((x,y)<1>,z)<2>,(B+,B*)<3>)<4>,A)<5>,C)<6>,D)<7>	4554
MT-30	B	D	((((((x,y)<1>,z)<2>,B+)<3>,A)<4>,C)<5>,(D,B*)<6>)<7>	4774
MT-31	B	<3>	(((((((x,y)<1>,z)<2>,B+)<3>,B*)<4>,A)<5>,C)<6>,D)<7>	4988
MT-32	B	z	((((((x,y)<1>,(z,B*)<2>)<3>,B+)<4>,A)<5>,C)<6>,D)<7>	5041
MT-33	B	<2>	(((((((x,y)<1>,z)<2>,B*)<3>,B+)<4>,A)<5>,C)<6>,D)<7>	4988
MT-34	B	<1>	(((((((x,y)<1>,B*)<2>,z)<3>,B+)<4>,A)<5>,C)<6>,D)<7>	5107
MT-35	B	y	((((((x,(y,B*)<1>)<2>,z)<3>,B+)<4>,A)<5>,C)<6>,D)<7>	5090
MT-36	B	x	(((((((x,B*)<1>,y)<2>,z)<3>,B+)<4>,A)<5>,C)<6>,D)<7>	5121
MT-37	B	<6>	(((((((x,y)<1>,z)<2>,B+)<3>,A)<4>,C)<5>,D)<6>,B*)<7>	5086
MT-38	B	<4>	(((((((x,y)<1>,z)<2>,B+)<3>,A)<4>,B*)<5>,C)<6>,D)<7>	5000
MT-39	B	<5>	(((((((x,y)<1>,z)<2>,B+)<3>,A)<4>,C)<5>,B*)<6>,D)<7>	5027
MT-40	D	A	((((((x,y)<1>,z)<2>,B)<3>,(A,D*)<4>)<5>,C)<6>,D+)<7>	4920
MT-41	D	C	((((((x,y)<1>,z)<2>,B)<3>,A)<4>,(C,D*)<5>)<6>,D+)<7>	4848
MT-42	D	B	((((((x,y)<1>,z)<2>,(B,D*)<3>)<4>,A)<5>,C)<6>,D+)<7>	4946
MT-43	D	D	((((((x,y)<1>,z)<2>,B)<3>,A)<4>,C)<5>,(D+,D*)<6>)<7>	4217
MT-44	D	<3>	(((((((x,y)<1>,z)<2>,B)<3>,D*)<4>,A)<5>,C)<6>,D+)<7>	5103
MT-45	D	z	((((((x,y)<1>,(z,D*)<2>)<3>,B)<4>,A)<5>,C)<6>,D+)<7>	5050
MT-46	D	<2>	(((((((x,y)<1>,z)<2>,D*)<3>,B)<4>,A)<5>,C)<6>,D+)<7>	5123
MT-47	D	<1>	(((((((x,y)<1>,D*)<2>,z)<3>,B)<4>,A)<5>,C)<6>,D+)<7>	5117
MT-48	D	y	((((((x,(y,D*)<1>)<2>,z)<3>,B)<4>,A)<5>,C)<6>,D+)<7>	5090
MT-49	D	x	(((((((x,D*)<1>,y)<2>,z)<3>,B)<4>,A)<5>,C)<6>,D+)<7>	5121
MT-50	D	<6>	(((((((x,y)<1>,z)<2>,B)<3>,A)<4>,C)<5>,D+)<6>,D*)<7>	5052
MT-51	D	<4>	(((((((x,y)<1>,z)<2>,B)<3>,A)<4>,D*)<5>,C)<6>,D+)<7>	5105
MT-52	D	<5>	(((((((x,y)<1>,z)<2>,B)<3>,A)<4>,C)<5>,D*)<6>,D+)<7>	5052
MT-53	<3>	A	((((((x+,y+)<1>,z+)<2>,B+)<3>,(A,(((x*,y*)<4>,z*)<5>,B*)<6>)<7>)<8>,C)<9>,D)<10>	4767
MT-54	<3>	C	((((((x+,y+)<1>,z+)<2>,B+)<3>,A)<4>,(C,(((x*,y*)<5>,z*)<6>,B*)<7>)<8>)<9>,D)<10>	4632
MT-55	<3>	D	((((((x+,y+)<1>,z+)<2>,B+)<3>,A)<4>,C)<5>,(D,(((x*,y*)<6>,z*)<7>,B*)<8>)<9>)<10>	4659
MT-56	<3>	<3>	(((((((x+,y+)<1>,z+)<2>,B+)<3>,(((x*,y*)<4>,z*)<5>,B*)<6>)<7>,A)<8>,C)<9>,D)<10>	4880
MT-57	<3>	<6>	(((((((x+,y+)<1>,z+)<2>,B+)<3>,A)<4>,C)<5>,D)<6>,(((x*,y*)<7>,z*)<8>,B*)<9>)<10>	4871
MT-58	<3>	<4>	(((((((x+,y+)<1>,z+)<2>,B+)<3>,A)<4>,(((x*,y*)<5>,z*)<6>,B*)<7>)<8>,C)<9>,D)<10>	4767
MT-59	<3>	<5>	(((((((x+,y+)<1>,z+)<2>,B+)<3>,A)<4>,C)<5>,(((x*,y*)<6>,z*)<7>,B*)<8>)<9>,D)<10>	4745
MT-60	z	A	((((((x,y)<1>,z+)<2>,B)<3>,(A,z*)<4>)<5>,C)<6>,D)<7>	4894
MT-61	z	C	((((((x,y)<1>,z+)<2>,B)<3>,A)<4>,(C,z*)<5>)<6>,D)<7>	4832
MT-62	z	B	((((((x,y)<1>,z+)<2>,(B,z*)<3>)<4>,A)<5>,C)<6>,D)<7>	4860
MT-63	z	D	((((((x,y)<1>,z+)<2>,B)<3>,A)<4>,C)<5>,(D,z*)<6>)<7>	4777
MT-64	z	<3>	(((((((x,y)<1>,z+)<2>,B)<3>,z*)<4>,A)<5>,C)<6>,D)<7>	5013
MT-65	z	z	((((((x,y)<1>,(z+,z*)<2>)<3>,B)<4>,A)<5>,C)<6>,D)<7>	4762
MT-66	z	<2>	(((((((x,y)<1>,z+)<2>,z*)<3>,B)<4>,A)<5>,C)<6>,D)<7>	4980
MT-67	z	<1>	(((((((x,y)<1>,z*)<2>,z+)<3>,B)<4>,A)<5>,C)<6>,D)<7>	4980
MT-68	z	y	((((((x,(y,z*)<1>)<2>,z+)<3>,B)<4>,A)<5>,C)<6>,D)<7>	5080
MT-69	z	x	(((((((x,z*)<1>,y)<2>,z+)<3>,B)<4>,A)<5>,C)<6>,D)<7>	5106
MT-70	z	<6>	(((((((x,y)<1>,z+)<2>,B)<3>,A)<4>,C)<5>,D)<6>,z*)<7>	5098
MT-71	z	<4>	(((((((x,y)<1>,z+)<2>,B)<3>,A)<4>,z*)<5>,C)<6>,D)<7>	5062
MT-72	z	<5>	(((((((x,y)<1>,z+)<2>,B)<3>,A)<4>,C)<5>,z*)<6>,D)<7>	5057
MT-73	<2>	A	((((((x+,y+)<1>,z+)<2>,B)<3>,(A,((x*,y*)<4>,z*)<5>)<6>)<7>,C)<8>,D)<9>	4702
MT-74	<2>	C	((((((x+,y+)<1>,z+)<2>,B)<3>,A)<4>,(C,((x*,y*)<5>,z*)<6>)<7>)<8>,D)<9>	4737
MT-75	<2>	B	((((((x+,y+)<1>,z+)<2>,(B,((x*,y*)<3>,z*)<4>)<5>)<6>,A)<7>,C)<8>,D)<9>	4759
MT-76	<2>	D	((((((x+,y+)<1>,z+)<2>,B)<3>,A)<4>,C)<5>,(D,((x*,y*)<6>,z*)<7>)<8>)<9>	4709
MT-77	<2>	<3>	(((((((x+,y+)<1>,z+)<2>,B)<3>,((x*,y*)<4>,z*)<5>)<6>,A)<7>,C)<8>,D)<9>	4759
MT-78	<2>	<2>	(((((((x+,y+)<1>,z+)<2>,((x*,y*)<3>,z*)<4>)<5>,B)<6>,A)<7>,C)<8>,D)<9>	4920
MT-79	<2>	<6>	(((((((x+,y+)<1>,z+)<2>,B)<3>,A)<4>,C)<5>,D)<6>,((x*,y*)<7>,z*)<8>)<9>	4993
MT-80	<2>	<4>	(((((((x+,y+)<1>,z+)<2>,B)<3>,A)<4>,((x*,y*)<5>,z*)<6>)<7>,C)<8>,D)<9>	4806
MT-81	<2>	<5>	(((((((x+,y+)<1>,z+)<2>,B)<3>,A)<4>,C)<5>,((x*,y*)<6>,z*)<7>)<8>,D)<9>	4905
MT-82	<1>	A	((((((x+,y+)<1>,z)<2>,B)<3>,(A,(x*,y*)<4>)<5>)<6>,C)<7>,D)<8>	4850
MT-83	<1>	C	((((((x+,y+)<1>,z)<2>,B)<3>,A)<4>,(C,(x*,y*)<5>)<6>)<7>,D)<8>	4809
MT-84	<1>	B	((((((x+,y+)<1>,z)<2>,(B,(x*,y*)<3>)<4>)<5>,A)<6>,C)<7>,D)<8>	4817
MT-85	<1>	D	((((((x+,y+)<1>,z)<2>,B)<3>,A)<4>,C)<5>,(D,(x*,y*)<6>)<7>)<8>	4775
MT-86	<1>	<3>	(((((((x+,y+)<1>,z)<2>,B)<3>,(x*,y*)<4>)<5>,A)<6>,C)<7>,D)<8>	4911
MT-87	<1>	z	((((((x+,y+)<1>,(z,(x*,y*)<2>)<3>)<4>,B)<5>,A)<6>,C)<7>,D)<8>	4899
MT-88	<1>	<2>	(((((((x+,y+)<1>,z)<2>,(x*,y*)<3>)<4>,B)<5>,A)<6>,C)<7>,D)<8>	4899
MT-89	<1>	<1>	(((((((x+,y+)<1>,(x*,y*)<2>)<3>,z)<4>,B)<5>,A)<6>,C)<7>,D)<8>	4932
MT-90	<1>	<6>	(((((((x+,y+)<1>,z)<2>,B)<3>,A)<4>,C)<5>,D)<6>,(x*,y*)<7>)<8>	5094
MT-91	<1>	<4>	(((((((x+,y+)<1>,z)<2>,B)<3>,A)<4>,(x*,y*)<5>)<6>,C)<7>,D)<8>	4997
MT-92	<1>	<5>	(((((((x+,y+)<1>,z)<2>,B)<3>,A)<4>,C)<5>,(x*,y*)<6>)<7>,D)<8>	5037
MT-93	y	A	((((((x,y+)<1>,z)<2>,B)<3>,(A,y*)<4>)<5>,C)<6>,D)<7>	4900
MT-94	y	C	((((((x,y+)<1>,z)<2>,B)<3>,A)<4>,(C,y*)<5>)<6>,D)<7>	4840
MT-95	y	B	((((((x,y+)<1>,z)<2>,(B,y*)<3>)<4>,A)<5>,C)<6>,D)<7>	4927
MT-96	y	D	((((((x,y+)<1>,z)<2>,B)<3>,A)<4>,C)<5>,(D,y*)<6>)<7>	4784
MT-97	y	<3>	(((((((x,y+)<1>,z)<2>,B)<3>,y*)<4>,A)<5>,C)<6>,D)<7>	5060
MT-98	y	z	((((((x,y+)<1>,(z,y*)<2>)<3>,B)<4>,A)<5>,C)<6>,D)<7>	4974
MT-99	y	<2>	(((((((x,y+)<1>,z)<2>,y*)<3>,B)<4>,A)<5>,C)<6>,D)<7>	5035
MT-100	y	<1>	(((((((x,y+)<1>,y*)<2>,z)<3>,B)<4>,A)<5>,C)<6>,D)<7>	5000
MT-101	y	y	((((((x,(y+,y*)<1>)<2>,z)<3>,B)<4>,A)<5>,C)<6>,D)<7>	4886
MT-102	y	x	(((((((x,y*)<1>,y+)<2>,z)<3>,B)<4>,A)<5>,C)<6>,D)<7>	5000
MT-103	y	<6>	(((((((x,y+)<1>,z)<2>,B)<3>,A)<4>,C)<5>,D)<6>,y*)<7>	5109
MT-104	y	<4>	(((((((x,y+)<1>,z)<2>,B)<3>,A)<4>,y*)<5>,C)<6>,D)<7>	5084
MT-105	y	<5>	(((((((x,y+)<1>,z)<2>,B)<3>,A)<4>,C)<5>,y*)<6>,D)<7>	5074
MT-106	x	A	((((((x+,y)<1>,z)<2>,B)<3>,(A,x*)<4>)<5>,C)<6>,D)<7>	4898
MT-107	x	C	((((((x+,y)<1>,z)<2>,B)<3>,A)<4>,(C,x*)<5>)<6>,D)<7>	4839
MT-108	x	B	((((((x+,y)<1>,z)<2>,(B,x*)<3>)<4>,A)<5>,C)<6>,D)<7>	4917
MT-109	x	D	((((((x+,y)<1>,z)<2>,B)<3>,A)<4>,C)<5>,(D,x*)<6>)<7>	4789
MT-110	x	<3>	(((((((x+,y)<1>,z)<2>,B)<3>,x*)<4>,A)<5>,C)<6>,D)<7>	5045
MT-111	x	z	((((((x+,y)<1>,(z,x*)<2>)<3>,B)<4>,A)<5>,C)<6>,D)<7>	4944
MT-112	x	<2>	(((((((x+,y)<1>,z)<2>,x*)<3>,B)<4>,A)<5>,C)<6>,D)<7>	5003
MT-113	x	<1>	(((((((x+,y)<1>,x*)<2>,z)<3>,B)<4>,A)<5>,C)<6>,D)<7>	4951
MT-114	x	y	((((((x+,(y,x*)<1>)<2>,z)<3>,B)<4>,A)<5>,C)<6>,D)<7>	4951
MT-115	x	x	(((((((x+,x*)<1>,y)<2>,z)<3>,B)<4>,A)<5>,C)<6>,D)<7>	4943
MT-116	x	<6>	(((((((x+,y)<1>,z)<2>,B)<3>,A)<4>,C)<5>,D)<6>,x*)<7>	5114
MT-117	x	<4>	(((((((x+,y)<1>,z)<2>,B)<3>,A)<4>,x*)<5>,C)<6>,D)<7>	5075
MT-118	x	<5>	(((((((x+,y)<1>,z)<2>,B)<3>,A)<4>,C)<5>,x*)<6>,D)<7>	5072
MT-119	<6>	<6>	(((((((x+,y+)<1>,z+)<2>,B+)<3>,A+)<4>,C+)<5>,D+)<6>,((((((x*,y*)<7>,z*)<8>,B*)<9>,A*)<10>,C*)<11>,D*)<12>)<13>	5054
MT-120	<4>	C	((((((x+,y+)<1>,z+)<2>,B+)<3>,A+)<4>,(C,((((x*,y*)<5>,z*)<6>,B*)<7>,A*)<8>)<9>)<10>,D)<11>	4660
MT-121	<4>	D	((((((x+,y+)<1>,z+)<2>,B+)<3>,A+)<4>,C)<5>,(D,((((x*,y*)<6>,z*)<7>,B*)<8>,A*)<9>)<10>)<11>	4558
MT-122	<4>	<6>	(((((((x+,y+)<1>,z+)<2>,B+)<3>,A+)<4>,C)<5>,D)<6>,((((x*,y*)<7>,z*)<8>,B*)<9>,A*)<10>)<11>	4707
MT-123	<4>	<4>	(((((((x+,y+)<1>,z+)<2>,B+)<3>,A+)<4>,((((x*,y*)<5>,z*)<6>,B*)<7>,A*)<8>)<9>,C)<10>,D)<11>	4900
MT-124	<4>	<5>	(((((((x+,y+)<1>,z+)<2>,B+)<3>,A+)<4>,C)<5>,((((x*,y*)<6>,z*)<7>,B*)<8>,A*)<9>)<10>,D)<11>	4660
MT-125	<5>	D	((((((x+,y+)<1>,z+)<2>,B+)<3>,A+)<4>,C+)<5>,(D,(((((x*,y*)<6>,z*)<7>,B*)<8>,A*)<9>,C*)<10>)<11>)<12>	4760
MT-126	<5>	<6>	(((((((x+,y+)<1>,z+)<2>,B+)<3>,A+)<4>,C+)<5>,D)<6>,(((((x*,y*)<7>,z*)<8>,B*)<9>,A*)<10>,C*)<11>)<12>	4760
MT-127	<5>	<5>	(((((((x+,y+)<1>,z+)<2>,B+)<3>,A+)<4>,C+)<5>,(((((x*,y*)<6>,z*)<7>,B*)<8>,A*)<9>,C*)<10>)<11>,D)<12>	4877
# ---------
The tree with the minimum parsimony score is the singly-labled tree (ST):	((((((x,y)<1>,z)<2>,B)<3>,A)<4>,C)<5>,D)<6>
Score = 4115
# LOG: Total execution time: 286.153 seconds.
# =========================================================================

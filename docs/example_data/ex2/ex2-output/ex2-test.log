# =========================================================================
# Welcome to GRAMPA -- Gene tree reconciliations with MUL-trees.
# Version 1.4.0 released on March 2023
# GRAMPA was developed by Gregg Thomas, S. Hussain Ather, Matthew Hahn
# Citation:      https://doi.org/10.1093/sysbio/syx044
# Website:       https://gwct.github.io/grampa/
# Report issues: https://github.com/gwct/grampa
#
# The date and time at the start is:  01.22.2025  10:58:14
# Using Python executable located at: /n/home07/gthomas/miniconda3/envs/grampa-issue8-1/bin/python3.13
# Using Python version:               3.13.1
#
# The program was called as:          /n/home07/gthomas/miniconda3/envs/grampa-issue8-1/bin/grampa -s spec_tree_3a.tre -g gene_trees_3a.txt -h1 x 1 2 -h2 C D 5 6 -o ex2-output -f ex2-test
#
# -----------------------------------------------------------------------------------------------------------------------------
# INPUT/OUTPUT INFO:
# Species tree file:                    spec_tree_3a.tre
# Gene tree file:                       gene_trees_3a.txt
# Output directory:                     ex2-output
# Score file:                           ex2-output/ex2-test-scores.txt
# Filtered gene trees:                  ex2-output/ex2-test-trees-filtered.txt
# Check nums file:                      ex2-output/ex2-test-checknums.txt
# Detailed mapping file:                ex2-output/ex2-test-detailed.txt
# Duplication count file:               ex2-output/ex2-test-dup-counts.txt
# -----------------------------------------------------------------------------------------------------------------------------
# OPTIONS INFO:
# Option                                Current setting               Current action
# -h1                                   x 1 2                         GRAMPA will search these H1 nodes. If none are specified, all nodes will be searched as H1 nodes.
# -h2                                   C D 5 6                       GRAMPA will search these H2 nodes. If none are specified, all nodes will be searched as H2 nodes.
# -c                                    8                             Gene trees with more than this number of groups/clades with polyploid species for a given h1/h2 combination will be skipped.
# -f                                    ex2-test                      All output files generated will have this string preprended to them.
# -p                                    1                             GRAMPA will use this number of processes for LCA mapping.
# -v                                    3                             Controls the amount of info printed to the screen as GRAMPA is running.
# --multree                             False                         The tree input with -s will be read as singly-labeled tree.
# --checknums                           False                         GRAMPA will count groups to filter gene trees and then perform reconciliations.
# --no-st, --st-only                    default                       GRAMPA will perform reconciliations to all MUL-trees specified by -h1 and -h2 and the input species tree.
# --maps                                False                         GRAMPA will only output duplication and loss counts in the detailed output file.
# ------------------------------------------------------------------------------------------------------------------------------------------------------
# Date        Time      Current step                                      Status                                  Elapsed time (s)    Step time (s)   
# ------------------------------------------------------------------------------------------------------------------------------------------------------
# 01.22.2025  10:58:14  Reading species tree                              Success: species tree read              0.38206             0.01976         
# 01.22.2025  10:58:14  Parsing hybrid clades                             Success: got H nodes                    0.38694             9e-05           
# 01.22.2025  10:58:14  Counting MUL-trees to be generated                Success: 12 total MUL-trees             0.39173             4e-05           
# 01.22.2025  10:58:14  Building MUL-trees                                Success: 12 MUL-trees built             0.39819             0.00156         
# 01.22.2025  10:58:14  Reading gene trees                                Success: 1000 gene trees read           0.59834             0.19537         
# 01.22.2025  10:58:17  Collapsing gene tree groupings                    Success                                 3.69892             3.0957          
# 01.22.2025  10:58:17  Filtering gene trees over group cap               Success: 0 gts over cap                 3.79293             0.08927         
# 01.22.2025  10:58:17  INFO: No trees filtered! Using your original set.
# ----------------------------------------
# 01.22.2025  10:58:32  Reconciliation                                    Success                                 18.34007            14.53308        
# 01.22.2025  10:58:42  Getting maps for lowest scoring MTs               Success                                 27.92074            9.57533         
# 01.22.2025  10:58:42  Writing detailed output file                      Success                                 27.93531            0.00953         
# 01.22.2025  10:58:42  Writing main output file                          Success                                 27.97084            0.03046         
# ===============================================================================================================================================================================
#
# Done!
# The date and time at the end is: 01.22.2025  10:58:42
# Total execution time:            27.983 seconds.
# Output directory for this run:   ex2-output
# Log file for this run:           ex2-output/ex2-test.log
# ----------------------------------------
# The MUL-tree with the minimum parsimony score is MT-9:	((((((x+,y+)<1>,z+)<2>,B)<3>,A)<4>,(C,((x*,y*)<5>,z*)<6>)<7>)<8>,D)<9>
# Score = 5242
# ----------------------------------------
# ===============================================================================================================================================================================
#
